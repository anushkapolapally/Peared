@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;700&display=swap');

@font-face {
  font-family: "Mona Sans";
  src: url("https://assets.codepen.io/64/Mona-Sans.woff2") format("woff2 supports variations"),
        url("https://assets.codepen.io/64/Mona-Sans.woff2") format("woff2-variations");
  font-weight: 100 1000;
}

@layer properties {
  @property --bg-position {
    syntax: "<number>";
    inherits: true;
    initial-value: 100;
  }
  @property --after-blur {
    syntax: "<number>";
    inherits: true;
    initial-value: 0;
  }
  @property --after-opacity {
    syntax: "<number>";
    inherits: true;
    initial-value: 1;
  }
  @property --before-opacity {
    syntax: "<number>";
    inherits: true;
    initial-value: 0.3;
  }
  @property --btn-offset {
    syntax: "<number>";
    inherits: true;
    initial-value: 1;
  }
  @property --btn-scale {
    syntax: "<number>";
    inherits: true;
    initial-value: 1;
  }
}

:root {
  --debug: 0;

  /* colors */
  --body-bg: hsl(125, 50%, 41%);
  --btn-bg: hsl(0, 0%, 0%);
  --btn-border-width: 1.5;
  --btn-offset: 1;
  --btn-scale: 1;
  --after-bg: linear-gradient(
    to right,
    rgb(0 0 0),
    rgb(0 0 0),
    rgb(0 0 0),
    rgb(0 0 0),
    rgb(0 0 0),
    rgb(0 0 0),
    rgb(0 0 0),
    rgb(0 0 0),
    rgb(0 0 0),
    rgb(0 0 0),
    rgb(0 0 0),
    rgb(0 0 0),
    rgb(0 0 0)
  );
  --after-blur: 10;
  --after-opacity: 1;
  --after-pos-y: 10;
  --before-opacity: 0.3;

  /* positions */
  --bg-position: 100;

  --color-white: hsl(0, 0%, 100%);
  --color-cyan: hsl(180, 100%, 50%);
  --color-blue: hsl(240, 100%, 50%);
  --color-purple: hsl(270, 100%, 50%);
  --color-pink: hsl(330, 40%, 70%);
  --color-red: hsl(0, 100%, 50%);
  --color-yellow: hsl(60, 100%, 50%);
  --color-lime: hsl(90, 100%, 75%);
  --color-orange: oklch(69.1% 0.223 36.85);
}

@supports (color: color(display-p3 0 0 0)) {
  :root {
    --color-white: color(display-p3 1 1 1);
    --color-cyan: color(display-p3 0 1 1);
    --color-blue: color(display-p3 0 0 1);
    --color-purple: color(display-p3 0.5 0 1);
    --color-pink: color(display-p3 1 0.4 0.7);
    --color-red: color(display-p3 1 0 0);
    --color-yellow: color(display-p3 1 1 0);
    --color-lime: color(display-p3 0.75 1 0);
    --color-orange: color(display-p3 0.96 0.39 0.2);
  }
}

*,
*:before,
*:after {
  box-sizing: border-box;
  outline: calc(var(--debug) * 1px) dotted red;
  outline-offset: -1px;
}

html,
body,
main {
  width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
}

html {
  font-size: 2rem;
  background: var(--bg);
}

h1 {
  color: rgb(45, 114, 66);
  text-align: center;
  margin: 0;
  position: absolute;
  top: 50px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 100; /* Ensure it's above other elements */
}

body {
  font-family: 'Quicksand', sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f0f0f0;
  color: #333;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
}

main {
  display: grid;
  place-items: center;
}

header {
  position: fixed;  /* Fixes the header to the top of the viewport */
  top: 0;           /* Ensures it stays at the very top */
  left: 0;          /* Aligns it to the left */
  width: 100%;      /* Spans the entire width of the screen */
  background: #CDE0C1; /* Optional: Semi-transparent background */
  padding: 10px 20px;
  z-index: 1000;    /* Ensures it stays above other elements */
  border: #CDE0C1; /* Thin white border */
}

.logo-container {
  display: flex;
  align-items: center;
}

.logo {
  width: 150px; /* Adjust the width as needed */
  height: auto; /* Maintain aspect ratio */
}

h1 {
  color: rgb(3, 70, 18);
  text-align: center;
  margin: 0;
  flex-grow: 1;
  transform: translate(-350%, -05%);
}

p {
  margin-top: 100px; /* Adjust to avoid overlap with header */
  text-align: center;
}

.proposal-form {
  display: flex;
  flex-direction: column;
  width: 80%;
  max-width: 600px;
  margin: 20px auto;
  padding: 20px;
  background: white;
  border-radius: 10px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.proposal-form label {
  margin-top: 10px;
}

.proposal-form input,
.proposal-form textarea {
  width: 100%;
  padding: 10px;
  margin-top: 5px;
  border: 1px solid #ccc;
  border-radius: 4px;
}

.submit-button {
  background: rgba(255, 255, 255, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 10px;
  padding: 10px 20px;
  color: #000000;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(10px);
  cursor: pointer;
  transition: 0.3s, box-shadow 0.3s;
  font-size: 1em; /* Adjust font size as needed */
  width: 90%; /* Make the button the same width as the form */
  margin-top: 20px; /* Add some space above the button */
}

.submit-button:hover {
  background: rgb(65, 124, 78);
  box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
}

.button-container {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 2px;
  width: 100%;
  top: 50%;
  transform: translate(-29%, 0%);
}

button {
  all: unset;
  background: transparent;
  border-width: 0;
  transform: scale(var(--btn-scale));
  transition: 
      --bg-position 3s ease, 
      --after-blur 0.3s ease,
      --before-opacity 0.3s ease,
      --btn-offset 0.3s ease,
      --btn-scale 0.2s cubic-bezier(.76,-0.25,.51,1.13);
  padding: 10px 20px;
  font-size: 20px;
}

button > div {
  display: block;
  padding: 0.8em 1.2em;
  background: var(--btn-bg);
  color: rgb(0, 0, 0);
  font-weight: bold;
  border-radius: 8px;
  position: relative;
  cursor: pointer;
  transition: --after-blur 0.3s ease;
}

button > div > span {
  background: linear-gradient(
      to right,
      var(--color-white),
      var(--color-white),
      var(--color-cyan),
      var(--color-blue),
      var(--color-purple),
      var(--color-pink),
      var(--color-red),
      var(--color-yellow),
      var(--color-lime),
      var(--color-white),
      var(--color-white)
    )
    no-repeat calc(var(--bg-position) * 1%) 0% / 900%;
  -webkit-background-clip: text;
  background-clip: text; /* Standard property for compatibility */
  -webkit-text-fill-color: transparent;
  letter-spacing: 0.15ch;
  font-weight: 600;
}

button > div:after {
  display: block;
  position: absolute;
  content: "";
  width: 100%;
  height: 100%;
  background: var(--after-bg) no-repeat calc(var(--bg-position) * 1%) 0% / 900%;
  transform: translateY(calc(var(--after-pos-y) * 1px));
  left: 0;
  top: 0;
  z-index: -2;
  filter: blur(calc(var(--after-blur) * 1px));
  opacity: var(--after-opacity);
}

button > div:before {
  content: "";
  display: block;
  position: absolute;
  width: calc(100% + calc(calc(var(--btn-border-width) * 2) * 1px));
  height: calc(100% + calc(calc(var(--btn-border-width) * 2) * 1px));
  background: linear-gradient(
      to right,
      var(--color-white),
      var(--color-white),
      var(--color-cyan),
      var(--color-blue),
      var(--color-purple),
      var(--color-pink),
      var(--color-red),
      var(--color-yellow),
      var(--color-lime),
      var(--color-white),
      var(--color-white)
    )
    no-repeat calc(var(--bg-position) * 1%) 0% / 900%;
  border-radius: 9px;
  z-index: -1;
  top: calc(var(--btn-border-width) * -1px);
  left: calc(var(--btn-border-width) * -1px);
  opacity: var(--before-opacity);
}

button:hover {
  --btn-scale: 1.05;
  --bg-position: 0;
  --after-bg: linear-gradient(
      to right,
      var(--color-white),
      var(--color-white),
      var(--color-cyan),
      var(--color-blue),
      var(--color-purple),
      var(--color-pink),
      var(--color-red),
      var(--color-yellow),
      var(--color-lime),
      var(--color-white),
      var(--color-white)
    );
  --after-blur: 30;
  --after-opacity: 0.3;
  --after-pos-y: 0;
  --before-opacity: 1;      
  --btn-offset: 5;
}

button:active {
  --btn-scale: 0.98;
  --after-blur: 15;
}

:root {
  --bg: hsl(221, 37%, 10%);
  --button-text: hsl(200, 60%, 12%);
  --button-1-surface: #4D6A41;
  
  --button-2-surface: #5F8368;
}

@keyframes enter {
  from {
    transform: translate(0, 0);
  }
  to {
    transform: translate(
      calc(var(--_x-motion) * var(--_motion-factor) * -1),
      calc(var(--_y-motion) * var(--_motion-factor) * -1)
    );
  }
}

@keyframes exit {
  from {
    transform: translate(
      calc(var(--_x-motion) * var(--_motion-factor) * -1),
      calc(var(--_y-motion) * var(--_motion-factor) * -1)
    );
  }
  to {
    transform: translate(0, 0);
  }
}